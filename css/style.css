/* Browsers are optimized for opacity/transform animations */
/* Name the animation */
@keyframes moveInLeft {
  /* Start */
  0% {
    opacity: 0;
    transform: translateX(-10rem); }
  80% {
    transform: translateX(1rem); }
  /* Finish */
  100% {
    opacity: 1;
    transform: translateX(0); } }

/* Name the animation */
@keyframes moveInRight {
  /* Start */
  0% {
    opacity: 0;
    transform: translateX(-10rem); }
  80% {
    transform: translateX(-1rem); }
  /* Finish */
  100% {
    opacity: 1;
    transform: translateX(0); } }

@keyframes moveInBottom {
  /* Start */
  0% {
    opacity: 0;
    transform: translateY(3rem); }
  /* Finish */
  100% {
    opacity: 1;
    transform: translateY(0); } }

*,
*::after,
*::before {
  margin: 0;
  padding: 0;
  /* Setting a global inheritance to all elements for box-sizing */
  box-sizing: inherit; }

/* Used to help determine rem by dividing by 10 */
/* html {
  font-size: 10px;
} */
/* 10px (desired) divided by 16px which is default browser size */
html {
  font-size: 62.5%; }

body {
  /* All elements now get border-box style by inheritance */
  box-sizing: border-box; }

body {
  font-family: "Lato", sans-serif;
  font-weight: 400;
  line-height: 1.7;
  color: #777;
  padding: 3rem; }

.heading-primary {
  color: #fff;
  text-transform: uppercase;
  margin-bottom: 6rem;
  /* Fixes animation glitch where it moves up slightly */
  backface-visibility: hidden; }
  .heading-primary--main {
    display: block;
    font-size: 6rem;
    font-weight: 400;
    letter-spacing: 3.5rem;
    animation-name: moveInLeft;
    animation-duration: 1s;
    animation-timing-function: ease-out; }
  .heading-primary--sub {
    display: block;
    font-size: 2rem;
    font-weight: 700;
    letter-spacing: 1.75rem;
    /* Condenses animation fields like we do for border */
    animation: moveInRight 1s ease-out; }

/* Pseudoclasses of link and visited */
.btn:link, .btn:visited {
  text-transform: uppercase;
  text-decoration: none;
  padding: 1.5rem 4rem;
  display: inline-block;
  border-radius: 10rem;
  transition: all 0.2s;
  font-size: 1.6rem;
  /* This is for the ::after pseudo element's positioning */
  position: relative; }

.btn:hover {
  /* Shadow on x-axis, y-axis, blur, and color including opacity */
  box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.2);
  /* Button click effect */
  transform: translateY(-3px); }
  .btn:hover::after {
    transform: scaleX(1.4) scaleY(1.6);
    opacity: 0; }

.btn:active {
  /* Shadow on x-axis, y-axis, blur, and color including opacity */
  box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.2);
  /* Button click effect */
  transform: translateY(-1px); }

.btn::after {
  /* Content and display are always required */
  /* This pseudo element will be treated like a child of the btn element */
  content: "";
  display: inline-block;
  height: 100%;
  width: 100%;
  border-radius: 10rem;
  position: absolute;
  top: 0;
  left: 0;
  z-index: -1;
  transition: all 0.4s; }

.btn--white {
  background-color: #fff;
  color: #777; }
  .btn--white::after {
    background-color: #fff; }

.btn--animated {
  /* Animation, duration, style, delay */
  animation: moveInBottom 0.5s ease-out 0.75s;
  /* Applies keyframe 0% at beginning of animation */
  animation-fill-mode: backwards; }

/* Specify gradient and image in same styling
Gradient goes from top left to right bottom */
/* Clip-path:polygon takes in 3 or more coordinates to define
the polygon starting from top left going clockwise */
.header {
  height: 95vh;
  background-image: linear-gradient(to right bottom, rgba(126, 213, 111, 0.8), rgba(40, 180, 133, 0.8)), url(../img/hero.jpg);
  background-size: cover;
  background-position: top;
  position: relative;
  clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);
  /* Height/Width scale automatically when only one is specified */
  /* Method to center horizontal/vertical without flexbox */ }
  .header__logo-box {
    position: absolute;
    top: 4rem;
    left: 4rem; }
  .header__logo {
    height: 3.5rem; }
  .header__text-box {
    position: absolute;
    /* Top/Left would both be 50% for perfect centering */
    top: 40%;
    left: 50%;
    transform: translate(-50%, -50%);
    /* To center the button in box */
    text-align: center; }
